// Copyright (C) 2012 von Karman Institute for Fluid Dynamics, Belgium
//
// This software is distributed under the terms of the
// GNU Lesser General Public License version 3 (LGPLv3).
// See doc/lgpl.txt and doc/gpl.txt for the license text.

#include "Common/TaggedObject.hh"

#include <iterator>


//////////////////////////////////////////////////////////////////////////////

namespace COOLFluiD {

  namespace Common {

//////////////////////////////////////////////////////////////////////////////

TaggedObject::TaggedObject()
{
}

//////////////////////////////////////////////////////////////////////////////

TaggedObject::~TaggedObject()
{
}

//////////////////////////////////////////////////////////////////////////////

bool TaggedObject::hasTag(const Tag& tag) const
{
  return (m_tags.find(tag) != m_tags.end());
}

//////////////////////////////////////////////////////////////////////////////

bool TaggedObject::hasNotTag(const Tag& tag) const
{
  return !hasTag(tag);
}

//////////////////////////////////////////////////////////////////////////////

void TaggedObject::attachTag(const Tag& tag)
{
  m_tags.insert(tag);
}

//////////////////////////////////////////////////////////////////////////////

void TaggedObject::removeTag(const Tag& tag)
{
  m_tags.erase(tag);
}

//////////////////////////////////////////////////////////////////////////////

void TaggedObject::print(std::ostream& out, const std::string& sep) const
{
  std::copy(m_tags.begin(), m_tags.end(),
            std::ostream_iterator<std::string>(out, sep.c_str()));
}

//////////////////////////////////////////////////////////////////////////////

  } // namespace Common

} // namespace COOLFluiD

