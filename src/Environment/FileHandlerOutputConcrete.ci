// Copyright (C) 2012 von Karman Institute for Fluid Dynamics, Belgium
//
// This software is distributed under the terms of the
// GNU Lesser General Public License version 3 (LGPLv3).
// See doc/lgpl.txt and doc/gpl.txt for the license text.

#ifndef COOLFluiD_Environment_FileHandlerOutputConcrete_ci
#define COOLFluiD_Environment_FileHandlerOutputConcrete_ci

//////////////////////////////////////////////////////////////////////////////



#include "Common/FilesystemException.hh"

//////////////////////////////////////////////////////////////////////////////

namespace COOLFluiD {

    namespace Environment {

//////////////////////////////////////////////////////////////////////////////

template < typename TRAIT_OPEN >
FileHandlerOutputConcrete<TRAIT_OPEN>::FileHandlerOutputConcrete()
{
}

//////////////////////////////////////////////////////////////////////////////

template < typename TRAIT_OPEN >
FileHandlerOutputConcrete<TRAIT_OPEN>::~FileHandlerOutputConcrete()
{
   if (m_isopen) fout.close();
}

//////////////////////////////////////////////////////////////////////////////

template < typename TRAIT_OPEN >
std::ofstream& FileHandlerOutputConcrete<TRAIT_OPEN>::open(const boost::filesystem::path& filepath,
                                                           std::ios_base::openmode mode)
{
  try {
    TRAIT_OPEN::open(fout,filepath,mode);
    m_isopen = true;
      return fout;
  }
   // convert boost exception to COOLFluiD exception
  catch (boost::filesystem::filesystem_error& e)
  {
    throw Common::FilesystemException (FromHere(),e.what());
  }
}

//////////////////////////////////////////////////////////////////////////////

template < typename TRAIT_OPEN >
inline
void FileHandlerOutputConcrete<TRAIT_OPEN>::close()
{
   fout.close();
   m_isopen = false;
}

//////////////////////////////////////////////////////////////////////////////

template < typename TRAIT_OPEN >
inline
std::ofstream& FileHandlerOutputConcrete<TRAIT_OPEN>::get()
{
   cf_assert(m_isopen);
   return fout;
}

//////////////////////////////////////////////////////////////////////////////

    } // namespace Environment

} // namespace COOLFluiD

//////////////////////////////////////////////////////////////////////////////

#endif // COOLFluiD_Environment_FileHandlerOutputConcrete_ci
