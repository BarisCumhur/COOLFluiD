// Copyright (C) 2012 von Karman Institute for Fluid Dynamics, Belgium
//
// This software is distributed under the terms of the
// GNU Lesser General Public License version 3 (LGPLv3).
// See doc/lgpl.txt and doc/gpl.txt for the license text.

#ifndef COOLFluiD_Numerics_SimpleGlobalMeshAdapter_UpdateMesh_hh
#define COOLFluiD_Numerics_SimpleGlobalMeshAdapter_UpdateMesh_hh

//////////////////////////////////////////////////////////////////////////////

#include "SimpleMeshAdapterData.hh"
#include "Framework/DataSocketSink.hh"
#include "Framework/Node.hh"

//////////////////////////////////////////////////////////////////////////////

namespace COOLFluiD {

  namespace Numerics {

    namespace SimpleGlobalMeshAdapter {

//////////////////////////////////////////////////////////////////////////////

  /**
   * This class represents a NumericalCommand action to be
   * sent to Domain to be executed in order to setup the MeshData.
   *
   * @author Thomas Wuilbaut
   *
   */
class UpdateMesh : public SimpleMeshAdapterCom {
public:

  /**
   * Constructor.
   */
  explicit UpdateMesh(const CFString& name) :
    SimpleMeshAdapterCom(name),
    socket_nodes("nodes")
  {
  }

  /**
   * Destructor.
   */
  ~UpdateMesh()
  {
  }

  /**
   * Returns the DataSocket's that this command needs as sinks
   * @return a vector of SafePtr with the DataSockets
   */
  std::vector<Utils::SafePtr<Framework::BaseDataSocketSink> > needsSockets();

  /**
   * Execute Processing actions
   */
  void execute();

private: // data

  // the sink socket to the data handle of the node's
  Framework::DataSocketSink<Framework::LOCAL,Framework::Node*> socket_nodes;


}; // class UpdateMesh

//////////////////////////////////////////////////////////////////////////////

    } // namespace SimpleGlobalMeshAdapter

  } // namespace Numerics

} // namespace COOLFluiD

//////////////////////////////////////////////////////////////////////////////

#endif // COOLFluiD_Numerics_SimpleGlobalMeshAdapter_UpdateMesh_hh

