# Sets:
#   FLENS_INCLUDE_DIR  = where TestFixture.h can be found
#   FLENS_LIBRARY      = the library to link against (flens etc)
#   CF_HAVE_FLENS        = set to true after finding the library
#

FIND_PACKAGE(CBlas)

IF (CF_HAVE_CBLAS)

  ADD_TRIAL_INCLUDE_PATH( ${FLENS_HOME}/include )
  ADD_TRIAL_INCLUDE_PATH( $ENV{FLENS_HOME}/include )

  FIND_PATH(FLENS_INCLUDE_DIR flens/flens.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
  FIND_PATH(FLENS_INCLUDE_DIR flens/flens.h)

  ADD_TRIAL_LIBRARY_PATH(${FLENS_HOME}/lib)
  ADD_TRIAL_LIBRARY_PATH($ENV{FLENS_HOME}/lib)

  FIND_LIBRARY(FLENS_LIBRARY flens ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
  FIND_LIBRARY(FLENS_LIBRARY flens )

  IF(FLENS_INCLUDE_DIR AND FLENS_LIBRARY)
    SET(CF_HAVE_FLENS 1 CACHE BOOL "Found flens library")
  ELSE(FLENS_INCLUDE_DIR AND FLENS_LIBRARY)
    SET(CF_HAVE_FLENS 0 CACHE BOOL "Not fount flens library")
  ENDIF(FLENS_INCLUDE_DIR AND FLENS_LIBRARY)

  LIST ( APPEND FLENS_LIBRARY ${CBLAS_LIBRARY} )

  MARK_AS_ADVANCED (
    FLENS_INCLUDE_DIR
    FLENS_LIBRARY
    CF_HAVE_FLENS
  )

  LOG ( "CF_HAVE_FLENS: [${CF_HAVE_FLENS}]" )
  IF(CF_HAVE_FLENS)
    LOGFILE ( "  FLENS_INCLUDE_DIR: [${FLENS_INCLUDE_DIR}]" )
    LOGFILE ( "  FLENS_LIBRARY: [${FLENS_LIBRARY}]" )
  ENDIF(CF_HAVE_FLENS)

ELSE(CF_HAVE_CBLAS)

  SET(CF_HAVE_FLENS 0 CACHE BOOL "Not fount flens library due to missing cblas")
  LOG ( "   +++ cblas not found but Flens requires it" )

ENDIF(CF_HAVE_CBLAS)
