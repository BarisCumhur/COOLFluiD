# Sets
#   GET_INCLUDE_DIRS
#   GET_LIBS
#   CF_HAVE_GET
#

SET_TRIAL_INCLUDE_PATH ("") # clear include search path
SET_TRIAL_LIBRARY_PATH ("") # clear library search path

ADD_TRIAL_INCLUDE_PATH( ${GET_HOME}/include )
ADD_TRIAL_INCLUDE_PATH( $ENV{GET_HOME}/include )
FOREACH(BDIR libcommon libget libio libsystem libnurbs libstep )
  FILE ( TO_CMAKE_PATH ${BDIR} BDIRPATH )
  ADD_TRIAL_INCLUDE_PATH( ${GET_HOME}/include/${BDIRPATH} )
  ADD_TRIAL_INCLUDE_PATH( $ENV{GET_HOME}/include/${BDIRPATH} )
ENDFOREACH(BDIR)

FIND_PATH(GET_INCLUDE_DIR_COMMON dimension.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
FIND_PATH(GET_INCLUDE_DIR_COMMON dimension.h)

FIND_PATH(GET_INCLUDE_DIR_SYS mgdecl.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
FIND_PATH(GET_INCLUDE_DIR_SYS mgdecl.h)

FIND_PATH(GET_INCLUDE_DIR_IO ioversion.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
FIND_PATH(GET_INCLUDE_DIR_IO ioversion.h)

FIND_PATH(GET_INCLUDE_DIR_STEP stepdef.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
FIND_PATH(GET_INCLUDE_DIR_STEP stepdef.h)

FIND_PATH(GET_INCLUDE_DIR_NURBS knotvector.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
FIND_PATH(GET_INCLUDE_DIR_NURBS knotvector.h)

FIND_PATH(GET_INCLUDE_DIR_GET geotopomaster.h ${TRIAL_INCLUDE_PATHS}  NO_DEFAULT_PATH)
FIND_PATH(GET_INCLUDE_DIR_GET geotopomaster.h)

ADD_TRIAL_LIBRARY_PATH(${GET_HOME}/lib )
ADD_TRIAL_LIBRARY_PATH($ENV{GET_HOME}/lib )

FIND_LIBRARY(GET_LIBRARY_LIBCOMMON common ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
FIND_LIBRARY(GET_LIBRARY_LIBCOMMON common )

FIND_LIBRARY(GET_LIBRARY_LIBSYS system ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
FIND_LIBRARY(GET_LIBRARY_LIBSYS system )

FIND_LIBRARY(GET_LIBRARY_LIBIO io ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
FIND_LIBRARY(GET_LIBRARY_LIBIO io )

FIND_LIBRARY(GET_LIBRARY_LIBSTEP step ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
FIND_LIBRARY(GET_LIBRARY_LIBSTEP step )

FIND_LIBRARY(GET_LIBRARY_LIBNURBS nurbs ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
FIND_LIBRARY(GET_LIBRARY_LIBNURBS nurbs )

FIND_LIBRARY(GET_LIBRARY_LIBGET get ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)
FIND_LIBRARY(GET_LIBRARY_LIBGET get )

SET(GET_INCLUDE_DIRS "NOTFOUND" )
IF ( GET_INCLUDE_DIR_COMMON AND GET_INCLUDE_DIR_SYS AND GET_INCLUDE_DIR_IO AND  GET_INCLUDE_DIR_STEP  AND GET_INCLUDE_DIR_NURBS  AND GET_INCLUDE_DIR_GET)
  SET(GET_INCLUDE_DIRS
    ${GET_INCLUDE_DIR_COMMON}
    ${GET_INCLUDE_DIR_SYS}
    ${GET_INCLUDE_DIR_IO}
    ${GET_INCLUDE_DIR_STEP}
    ${GET_INCLUDE_DIR_NURBS}
    ${GET_INCLUDE_DIR_GET}
)
ENDIF ( GET_INCLUDE_DIR_COMMON AND GET_INCLUDE_DIR_SYS AND GET_INCLUDE_DIR_IO AND  GET_INCLUDE_DIR_STEP  AND GET_INCLUDE_DIR_NURBS  AND GET_INCLUDE_DIR_GET)

SET(GET_LIBRARIES "NOTFOUND" )
IF ( GET_LIBRARY_LIBCOMMON AND GET_LIBRARY_LIBSYS AND GET_LIBRARY_LIBIO AND  GET_LIBRARY_LIBSTEP  AND GET_LIBRARY_LIBNURBS  AND GET_LIBRARY_LIBGET)
  SET(GET_LIBRARIES
    ${GET_LIBRARY_LIBGET}
    ${GET_LIBRARY_LIBSTEP}
    ${GET_LIBRARY_LIBNURBS}
    ${GET_LIBRARY_LIBIO}
    ${GET_LIBRARY_LIBCOMMON}
    ${GET_LIBRARY_LIBSYS}
  )
ENDIF ( GET_LIBRARY_LIBCOMMON AND GET_LIBRARY_LIBSYS AND GET_LIBRARY_LIBIO AND  GET_LIBRARY_LIBSTEP  AND GET_LIBRARY_LIBNURBS  AND GET_LIBRARY_LIBGET)

IF(GET_INCLUDE_DIRS AND GET_LIBRARIES)
  SET(CF_HAVE_GET 1 CACHE BOOL "Found GET library")
ELSE(GET_INCLUDE_DIRS AND GET_LIBRARIES)
  SET(CF_HAVE_GET 0 CACHE BOOL "Not fount GET library")
ENDIF(GET_INCLUDE_DIRS AND GET_LIBRARIES)

MARK_AS_ADVANCED (
  GET_INCLUDE_DIR_COMMON
  GET_INCLUDE_DIR_SYS
  GET_INCLUDE_DIR_IO
  GET_INCLUDE_DIR_STEP
  GET_INCLUDE_DIR_NURBS
  GET_INCLUDE_DIR_GET
  GET_LIBRARY_LIBCOMMON
  GET_LIBRARY_LIBSYS
  GET_LIBRARY_LIBIO
  GET_LIBRARY_LIBSTEP
  GET_LIBRARY_LIBNURBS
  GET_LIBRARY_LIBGET
  GET_LIBRARIES
  GET_INCLUDE_DIRS
  CF_HAVE_GET
)

LOG ( "CF_HAVE_GET: [${CF_HAVE_GET}]" )
IF(CF_HAVE_GET)
   LOGFILE ( "  GET_INCLUDE_DIRS: [${GET_INCLUDE_DIRS}]" )
   LOGFILE ( "  GET_LIBRARIES:    [${GET_LIBRARIES}]" )
ENDIF(CF_HAVE_GET)
